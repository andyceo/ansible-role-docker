---

- name: Add docker repository key
  apt_key:
    id: "{{ docker.data.apt_key_sig }}"
    keyserver: "{{ docker.data.apt_keyserver }}"
    state: present

- name: Install python-pycurl to make apt_repository module workable
  apt: pkg=python-pycurl

- name: Add docker repository
  apt_repository:
    repo="{{ docker.data.apt_repository }}"
    state=present

- name: Update apt repositories cache
  apt: update_cache=yes

- name: Purge old lxc-docker if it exists
  apt:
    pkg=lxc-docker
    state=absent
    purge=yes

- name: Get current core version (uname -r)
  command: uname -r
  register: docker_linux_core
  changed_when: false

- name: Install linux-image-extra to use aufs storage driver
  apt: pkg="linux-image-extra-{{ docker_linux_core.stdout }}"

- name: Finally install docker and start it daemon
  apt: pkg=docker-engine
  notify: docker-start

- meta: flush_handlers

- name: Install pip package to operate with python modules
  apt: name=python-pip state=present

- name: Install docker-py to make ansible module docker workable
  pip: name=docker-py

- name: Orcestrate containers
  docker:
    name: "{{ item.name }}"
    image: "{{ item.image }}:{{ item.tag|default('latest') }}"
    state: "{{ item.state }}"
    hostname: "{{ item.hostname|default('') }}"
    detach: "{{ item.detach|default(False) }}"
    restart_policy: "{{ item.restart_policy|default('no') }}"
    ports: "{{ item.ports|default([]) }}"
    volumes: "{{ item.volumes|default([]) }}"
    links: "{{ item.links|default([]) }}"
    env: "{{ item.env|default({}) }}"
    memory_limit: "{{ item.memory_limit|default('0MB') }}"
  with_items: "{{ docker.containers }}"
  when: "{{ item.enable }}"

# This is the example task with all params that we can use in Ansible 1.5.4 (Ubuntu 14.04)
#- name: Example task that do something with containers
#  docker:
#    image=
#    state=started
#    command=
#    detach=yes
#    domainname
#    publish_all_ports
#    expose=
#    hostname=
#    links=redis:myredis
#    name=
#    volumes=
#    volumes_from=
